name: Build & Publish

on:
  push:
    branches:
      - main
  schedule:
    # This is here to ensure that the calendar shows the correct next event
    - cron: 1 0 * * *
  pull_request: {}

jobs:
  build:
    env:
      # ruby/setup-ruby@v1 does not offer a way to change the cached gems path.
      # See https://github.com/ruby/setup-ruby/issues/291
      GLOBAL_GEMS: 1
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
          cache-version: 2

      - name: Build & Validate
        run: rake validate

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3

  changes:
    runs-on: ubuntu-latest
    if: github.ref != 'refs/heads/main'
    outputs:
      build-system: ${{ steps.filter.outputs.build-system }}
    steps:
      - name: Check if build system changed
        uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            build-system:
              - _config.yml
              - .github/**/*
              - Gemfile*
              - Rakefile

  build-main:
    needs:
      - changes
    if: needs.changes.outputs.build-system == 'true'
    env:
      # ruby/setup-ruby@v1 does not offer a way to change the cached gems path.
      # See https://github.com/ruby/setup-ruby/issues/291
      GLOBAL_GEMS: 1
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: main
          submodules: recursive

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
          cache-version: 2

      - name: Build
        run: rake build

      - name: Upload Pages artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-from-main
          path: _site

  diff:
    runs-on: ubuntu-latest
    needs:
      - build
      - build-main
    steps:
      - name: Download local artefact
        uses: actions/download-artifact@v4
        with:
          name: github-pages

      - name: Unpack local
        run: |
          mkdir local
          pushd local
          tar --extract --file ../artifact.tar
          popd
          mv artifact.tar local.tar

      - name: Download main branch build artifact
        uses: actions/download-artifact@v4
        with:
          name: build-from-main
          path: main

      - name: Replace build timestamps
        run: sed -i -r '1 s_<updated>[^/]+</updated>_<updated>NOW</updated>_' {main,local}/feed.xml

      - name: Diff
        run: diff -ru main local

  deploy:
    name: Deploy to GitHub Pages
    runs-on: ubuntu-latest
    needs: build
    if: ${{ github.ref == 'refs/heads/main' }}

    # Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
    # However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
    concurrency:
      group: "pages"
      cancel-in-progress: false

    # Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
    permissions:
      contents: read
      pages: write
      id-token: write

    environment:
      name: github-pages
      # Tell GitHub where we deployed to
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
